

.main-container {
  display: grid;
  grid-template-columns: 0.25fr repeat(5, 1fr) 0.25fr; /* Creates side margins and main columns */
  grid-template-rows: 0.25fr repeat(5, 1fr) 0.25fr; /* Uniform row sizes */
  gap: 10px; /* Spacing between grid items */
  height: 100vh; /* Fills viewport height */
  color: white; /* Text color */
}

.plans-container {
  grid-column: 2 / 7; /* Spans columns 3, 4, and 5 */
  grid-row: 1 / 7; /* Spans rows 1 to 6 */
  display: grid; /* Allows for internal grid layout */
  grid-template-columns: 1fr 1fr 1fr; /* Three equal columns internally */
  grid-template-rows: 1fr; /* Two rows, second row smaller */
  border-radius: 1rem; /* Rounded corners */
  margin: 10px 0; /* Vertical spacing */

  width: 100%; /* Ensure full width of grid cell */
  gap: 10px;
  padding: 10px;
}

.plan {
  display: flex;
  flex-direction: column; /* Stack children vertically */
  background: rgb(73,77,94);
  background: radial-gradient(circle, rgba(73,77,94,1) 0%, rgba(41,45,64,1) 70%);
  padding: 1rem;
  justify-content: flex-start; /* Align items at the top initially */
  align-items: center;
  border-radius: 1rem;
  height: 100%; /* Ensure plans have equal height */
  transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth animation */
  opacity: 0; /* Hidden initially */
  animation: fallIn 0.5s ease-out forwards;
}

.plan ul{
  margin-top: 10px;
}

.plan img {
  width: 100%; /* Makes the image fill the available width */
  height: auto; /* Maintains the aspect ratio */
  object-fit: contain; /* Ensures the image stays inside the container without stretching */
  border-radius: 1rem; /* Optional: makes the image corners rounded */
}

.button-box {
  margin-top: auto; /* Pushes the button-box to the bottom */
  width: 100%; /* Ensures the button-box stretches across the parent container */
  display: flex;
  justify-content: center;
}

.button-box Button {
  width: 100%; /* Makes the Button fill the width of the button-box */
  text-align: center; /* Centers the text inside the button */
}

@keyframes fallIn {
  0% {
    transform: translateY(-100%);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

